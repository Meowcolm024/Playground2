2022.04.28 23:08:01 INFO  tracing is disabled for protocol LSP, to enable tracing of incoming and outgoing JSON messages create an empty file at /Users/yatchunglaw/VSCodeProjects/Playground2/.metals/lsp.trace.json or /Users/yatchunglaw/Library/Caches/org.scalameta.metals/lsp.trace.json
2022.04.28 23:08:01 INFO  logging to file /Users/yatchunglaw/VSCodeProjects/Playground2/.metals/metals.log
2022.04.28 23:08:01 INFO  Started: Metals version 0.11.4 in workspace '/Users/yatchunglaw/VSCodeProjects/Playground2' for client Visual Studio Code 1.66.2.
2022.04.28 23:08:02 INFO  time: initialize in 0.97s
2022.04.28 23:08:02 WARN  Flyway upgrade recommended: H2 2.1.212 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.1.210.
2022.04.28 23:08:02 WARN  Build server is not auto-connectable.
2022.04.28 23:08:02 WARN  no build tool detected in workspace '/Users/yatchunglaw/VSCodeProjects/Playground2'. The most common cause for this problem is that the editor was opened in the wrong working directory, for example if you use sbt then the workspace directory should contain build.sbt. 
2022.04.28 23:08:05 INFO  no build target found for /Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc. Using presentation compiler with project's scala-library version: 3.1.2
4Êúà 28, 2022 11:08:05 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
Ë≠¶Âëä: Unmatched cancel notification for request id 4
4Êúà 28, 2022 11:08:05 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
Ë≠¶Âëä: Unmatched cancel notification for request id 6
4Êúà 28, 2022 11:08:05 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
Ë≠¶Âëä: Unmatched cancel notification for request id 8
[31merror[39m: Others/fu.worksheet.sc:51:1: 
Not found: tra
tra
^^^
2022.04.28 23:08:06 INFO  no build target found for /Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc. Using presentation compiler with project's scala-library version: 3.1.2
2022.04.28 23:08:06 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 2.64s
2022.04.28 23:08:27 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.79s
2022.04.28 23:08:38 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.34s
2022.04.28 23:09:10 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.35s
2022.04.28 23:09:27 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.33s
2022.04.28 23:10:01 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.31s
[31merror[39m: Others/fu.worksheet.sc:62:14: 
App.this.FieldA[A] does not take type parameters
def useA[A, T: FieldA[A]]() = ???
             ^^^^^^^^^^^
2022.04.28 23:10:20 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.2s
2022.04.28 23:10:33 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.32s
2022.04.28 23:11:23 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.35s
2022.04.28 23:11:27 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.4s
2022.04.28 23:11:37 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.28s
2022.04.28 23:11:53 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.27s
2022.04.28 23:11:56 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.26s
2022.04.28 23:13:13 INFO  shutting down Metals
2022.04.29 12:43:22 INFO  tracing is disabled for protocol LSP, to enable tracing of incoming and outgoing JSON messages create an empty file at /Users/yatchunglaw/VSCodeProjects/Playground2/.metals/lsp.trace.json or /Users/yatchunglaw/Library/Caches/org.scalameta.metals/lsp.trace.json
2022.04.29 12:43:22 INFO  logging to file /Users/yatchunglaw/VSCodeProjects/Playground2/.metals/metals.log
2022.04.29 12:43:22 INFO  Started: Metals version 0.11.4 in workspace '/Users/yatchunglaw/VSCodeProjects/Playground2' for client Visual Studio Code 1.66.2.
2022.04.29 12:43:23 INFO  time: initialize in 1.12s
2022.04.29 12:43:23 WARN  Flyway upgrade recommended: H2 2.1.212 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.1.210.
2022.04.29 12:43:23 WARN  Build server is not auto-connectable.
2022.04.29 12:43:23 WARN  no build tool detected in workspace '/Users/yatchunglaw/VSCodeProjects/Playground2'. The most common cause for this problem is that the editor was opened in the wrong working directory, for example if you use sbt then the workspace directory should contain build.sbt. 
2022.04.29 12:43:35 INFO  shutting down Metals
2022.05.20 22:13:46 INFO  tracing is disabled for protocol LSP, to enable tracing of incoming and outgoing JSON messages create an empty file at /Users/yatchunglaw/VSCodeProjects/Playground2/.metals/lsp.trace.json or /Users/yatchunglaw/Library/Caches/org.scalameta.metals/lsp.trace.json
2022.05.20 22:13:46 INFO  logging to file /Users/yatchunglaw/VSCodeProjects/Playground2/.metals/metals.log
2022.05.20 22:13:46 INFO  Started: Metals version 0.11.5 in workspace '/Users/yatchunglaw/VSCodeProjects/Playground2' for client Visual Studio Code 1.67.2.
2022.05.20 22:13:47 INFO  time: initialize in 1.02s
2022.05.20 22:13:47 WARN  Flyway upgrade recommended: H2 2.1.212 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.1.210.
2022.05.20 22:13:47 WARN  Build server is not auto-connectable.
2022.05.20 22:13:47 WARN  no build tool detected in workspace '/Users/yatchunglaw/VSCodeProjects/Playground2'. The most common cause for this problem is that the editor was opened in the wrong working directory, for example if you use sbt then the workspace directory should contain build.sbt. 
[31merror[39m: Others/fu.worksheet.sc:68:1: 
Not found: implici
implici
^^^^^^^
2022.05.20 22:13:51 INFO  no build target found for /Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc. Using presentation compiler with project's scala-library version: 3.1.2
5Êúà 20, 2022 10:13:51 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
Ë≠¶Âëä: Unmatched cancel notification for request id 4
5Êúà 20, 2022 10:13:51 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
Ë≠¶Âëä: Unmatched cancel notification for request id 2
5Êúà 20, 2022 10:13:51 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
Ë≠¶Âëä: Unmatched cancel notification for request id 8
2022.05.20 22:13:51 INFO  no build target found for /Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc. Using presentation compiler with project's scala-library version: 3.1.2
2022.05.20 22:13:51 ERROR worksheet: /Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc
java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.onPublishDiagnostics(Diagnostics.scala:169)
	at scala.meta.internal.worksheets.WorksheetProvider.scala$meta$internal$worksheets$WorksheetProvider$$evaluateWorksheet(WorksheetProvider.scala:397)
	at scala.meta.internal.worksheets.WorksheetProvider$$anon$1.liftedTree1$1(WorksheetProvider.scala:267)
	at scala.meta.internal.worksheets.WorksheetProvider$$anon$1.run(WorksheetProvider.scala:267)

2022.05.20 22:13:51 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 2.69s
5Êúà 20, 2022 10:13:51 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 18,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class F"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 20, 2022 10:13:51 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 20,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class Fun"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 20, 2022 10:13:52 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 21,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunA"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 20, 2022 10:13:52 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 22,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 20, 2022 10:13:53 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 23,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp()"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 20, 2022 10:13:53 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 24,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp(f)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 20, 2022 10:13:54 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 25,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp(f:)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 20, 2022 10:13:54 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 26,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp(f: )"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 20, 2022 10:13:55 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 27,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp(f: F)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 20, 2022 10:13:55 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 28,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp(f: Fu)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 20, 2022 10:13:55 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 29,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp(f: Fun)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 20, 2022 10:13:55 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 30,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp(f: Func)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 20, 2022 10:13:58 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 31,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp(f: Function1)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:13:59 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 32,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp(f: Function1[])"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:02 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 33,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[(f: Function1[])"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:02 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 34,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A(f: Function1[])"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:03 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 35,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A,(f: Function1[])"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:04 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 36,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, (f: Function1[])"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:04 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 37,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B(f: Function1[])"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:04 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 38,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](f: Function1[])"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:08 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 39,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](f: Function1])"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:09 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 40,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](f: Function1)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:10 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 49,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](f: )"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:10 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 50,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](f: A)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:10 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 51,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](f: A )"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:11 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 52,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](f: A \u003d)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:11 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 53,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](f: A \u003d\u003e)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:11 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 54,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](f: A \u003d\u003e )"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:11 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 55,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](f: A \u003d\u003e B)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:12 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 56,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](f: A \u003d\u003e B):"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:14:12 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 57,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](f: A \u003d\u003e B):\n    "
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:00 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 58,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](: A \u003d\u003e B):\n"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:00 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 59,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](s: A \u003d\u003e B):\n"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:01 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 60,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](se: A \u003d\u003e B):\n"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:01 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 62,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:02 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 63,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    "
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:02 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 64,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    d"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:02 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 65,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    de"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:03 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 69 is not a valid line number, allowed [0..68]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.lineLength$1(Position.scala:57)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:60)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 15 more

5Êúà 20, 2022 10:15:03 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 66,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:03 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 69 is not a valid line number, allowed [0..68]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.lineLength$1(Position.scala:57)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:60)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 15 more

5Êúà 20, 2022 10:15:03 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 67,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def "
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:04 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 68,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:04 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 69 is not a valid line number, allowed [0..68]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.lineLength$1(Position.scala:57)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:60)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 15 more

5Êúà 20, 2022 10:15:04 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 69,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $()"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:04 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 69 is not a valid line number, allowed [0..68]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.lineLength$1(Position.scala:57)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:60)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 15 more

5Êúà 20, 2022 10:15:06 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 70,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:06 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 69 is not a valid line number, allowed [0..68]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.lineLength$1(Position.scala:57)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:60)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 15 more

5Êúà 20, 2022 10:15:07 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 72,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: )"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:07 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 73,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:08 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 69 is not a valid line number, allowed [0..68]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.lineLength$1(Position.scala:57)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:60)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 15 more

5Êúà 20, 2022 10:15:09 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 75,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): "
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:09 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 76,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:09 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 69 is not a valid line number, allowed [0..68]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.lineLength$1(Position.scala:57)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:60)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 15 more

5Êúà 20, 2022 10:15:10 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 78,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:10 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 69 is not a valid line number, allowed [0..68]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.lineLength$1(Position.scala:57)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:60)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 15 more

5Êúà 20, 2022 10:15:10 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 79,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d "
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:12 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 80,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d s"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:12 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 81,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d se"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:12 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 82,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d sel"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:12 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 83,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:12 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 69 is not a valid line number, allowed [0..68]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.lineLength$1(Position.scala:57)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:60)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 15 more

5Êúà 20, 2022 10:15:13 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 84,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self()"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:13 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 69 is not a valid line number, allowed [0..68]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.lineLength$1(Position.scala:57)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:60)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 15 more

5Êúà 20, 2022 10:15:13 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 85,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 67 is not a valid line number, allowed [0..66]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 20, 2022 10:15:13 ‰∏ãÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 69 is not a valid line number, allowed [0..68]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.lineLength$1(Position.scala:57)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:60)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 15 more

2022.05.20 22:15:14 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 1.05s
2022.05.20 22:15:17 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.47s
[31merror[39m: 
fu.worksheet.sc:120 (mdoc generated code) 
 Missing parameter type

I could not infer the type of the parameter _$6 of expanded function:
_$6 => _$6 + 1.
      (_ + 1) $ 2


2022.05.20 22:15:24 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.25s
[31merror[39m: 
fu.worksheet.sc:120 (mdoc generated code) 
 Missing parameter type

I could not infer the type of the parameter _$6 of expanded function:
_$6 => _$6 + 1.
      (_ + 1) $ 2


2022.05.20 22:15:26 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.21s
[31merror[39m: Others/fu.worksheet.sc:71:12: 
Missing parameter type

I could not infer the type of the parameter _$6 of expanded function:
_$6 => _$6 + 1.
val res = (_ + 1) $ 2
           ^
2022.05.20 22:15:36 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.2s
[31merror[39m: Others/fu.worksheet.sc:71:12: 
Missing parameter type

I could not infer the type of the parameter x.
val res = (x => x + 1) $ 2
           ^
2022.05.20 22:15:44 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.22s
[31merror[39m: Others/fu.worksheet.sc:71:24: 
Not found: type +
val res = (x: Int => x + 1) $ 2
                       ^
[31merror[39m: Others/fu.worksheet.sc:71:12: 
Not found: x
val res = (x: Int => x + 1) $ 2
           ^
2022.05.20 22:15:52 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.2s
2022.05.20 22:15:58 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.39s
2022.05.20 22:16:01 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.33s
[31merror[39m: Others/fu.worksheet.sc:71:13: 
Missing parameter type

I could not infer the type of the parameter x.
val res = ((x) => x + 1) $ 2
            ^
2022.05.20 22:16:04 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.21s
2022.05.20 22:16:06 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.35s
2022.05.20 22:16:38 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.33s
2022.05.20 22:16:44 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.32s
2022.05.20 22:16:48 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.3s
2022.05.20 22:17:21 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.3s
2022.05.20 22:21:04 INFO  shutting down Metals
2022.05.21 11:17:16 INFO  tracing is disabled for protocol LSP, to enable tracing of incoming and outgoing JSON messages create an empty file at /Users/yatchunglaw/VSCodeProjects/Playground2/.metals/lsp.trace.json or /Users/yatchunglaw/Library/Caches/org.scalameta.metals/lsp.trace.json
2022.05.21 11:17:16 INFO  logging to file /Users/yatchunglaw/VSCodeProjects/Playground2/.metals/metals.log
2022.05.21 11:17:16 INFO  Started: Metals version 0.11.5 in workspace '/Users/yatchunglaw/VSCodeProjects/Playground2' for client Visual Studio Code 1.67.2.
2022.05.21 11:17:17 INFO  time: initialize in 1.01s
2022.05.21 11:17:17 WARN  Flyway upgrade recommended: H2 2.1.212 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.1.210.
2022.05.21 11:17:17 WARN  Build server is not auto-connectable.
2022.05.21 11:17:17 WARN  no build tool detected in workspace '/Users/yatchunglaw/VSCodeProjects/Playground2'. The most common cause for this problem is that the editor was opened in the wrong working directory, for example if you use sbt then the workspace directory should contain build.sbt. 
5Êúà 21, 2022 11:17:18 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
Ë≠¶Âëä: Unmatched cancel notification for request id 2
2022.05.21 11:17:20 INFO  no build target found for /Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc. Using presentation compiler with project's scala-library version: 3.1.2
5Êúà 21, 2022 11:17:20 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
Ë≠¶Âëä: Unmatched cancel notification for request id 10
[31merror[39m: Others/fu.worksheet.sc:76:5: 
Not found: f
    f
    ^
2022.05.21 11:17:21 INFO  time: code lens generation in 1.14s
2022.05.21 11:17:21 INFO  time: code lens generation in 2.51s
2022.05.21 11:17:21 INFO  time: code lens generation in 2.49s
2022.05.21 11:17:21 INFO  time: code lens generation in 1.14s
2022.05.21 11:17:21 INFO  no build target found for /Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc. Using presentation compiler with project's scala-library version: 3.1.2
2022.05.21 11:17:21 ERROR worksheet: /Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc
java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.onPublishDiagnostics(Diagnostics.scala:169)
	at scala.meta.internal.worksheets.WorksheetProvider.scala$meta$internal$worksheets$WorksheetProvider$$evaluateWorksheet(WorksheetProvider.scala:397)
	at scala.meta.internal.worksheets.WorksheetProvider$$anon$1.liftedTree1$1(WorksheetProvider.scala:267)
	at scala.meta.internal.worksheets.WorksheetProvider$$anon$1.run(WorksheetProvider.scala:267)

2022.05.21 11:17:21 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 2.94s
5Êúà 21, 2022 11:17:22 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 20,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 21, 2022 11:17:22 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 21,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c-"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 21, 2022 11:17:22 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 77 is not a valid line number, allowed [0..76]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.lineLength$1(Position.scala:57)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:60)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 16 more

5Êúà 21, 2022 11:17:22 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 22,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- "
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 21, 2022 11:17:23 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 23,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- L"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 21, 2022 11:17:23 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 25,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- Lis"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 21, 2022 11:17:23 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 26,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 21, 2022 11:17:23 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 77 is not a valid line number, allowed [0..76]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.lineLength$1(Position.scala:57)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:60)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 16 more

5Êúà 21, 2022 11:17:24 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 27,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List()"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 21, 2022 11:17:24 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 28,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 21, 2022 11:17:24 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 29,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 16 more

5Êúà 21, 2022 11:17:24 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 30,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:25 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 31,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:25 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 32,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:25 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 77 is not a valid line number, allowed [0..76]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.lineLength$1(Position.scala:57)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:60)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 16 more

5Êúà 21, 2022 11:17:25 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 77 is not a valid line number, allowed [0..76]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.lineLength$1(Position.scala:57)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:60)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 16 more

5Êúà 21, 2022 11:17:25 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 33,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        "
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:26 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 34,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        r"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:26 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 35,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        re"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:27 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 37,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res "
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:27 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 38,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res \u003d"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:27 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 77 is not a valid line number, allowed [0..76]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 16 more

5Êúà 21, 2022 11:17:27 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 39,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res \u003d "
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:32 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 40,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res \u003d s"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:32 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 41,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res \u003d s "
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:33 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 44,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res \u003d s + 1"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:33 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 77 is not a valid line number, allowed [0..76]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 16 more

5Êúà 21, 2022 11:17:33 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 45,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res \u003d s + 1\n        "
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:35 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 46,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res \u003d s + 1\n    "
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:36 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 47,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res \u003d s + 1\n    y"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:36 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 48,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res \u003d s + 1\n    yi"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:36 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 49,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res \u003d s + 1\n    yie"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:36 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 50,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res \u003d s + 1\n    yiel"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:36 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 51,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res \u003d s + 1\n    yield"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:36 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 78 is not a valid line number, allowed [0..76]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 16 more

5Êúà 21, 2022 11:17:36 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 52,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res \u003d s + 1\n    yield\n        "
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:37 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 53,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res \u003d s + 1\n    yield\n        r"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:37 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 54,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res \u003d s + 1\n    yield\n        re"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:37 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
Ë≠¶Âëä: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 55,
      "uri": "file:///Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc"
    },
    "contentChanges": [
      {
        "text": "import java.lang.reflect.Field\n\ntrait Functor[F[_]]:\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B]\n\ntrait Applicative[F[_]] extends Functor[F]:\n    def pure[A](x: A): F[A]\n    def ap[A, B](f: F[A \u003d\u003e B], x: F[A]): F[B]\n\n    def fmap[A, B](v: F[A], f: A \u003d\u003e B): F[B] \u003d ap(pure(f), v)\n\ntrait Monad[M[_]] extends Applicative[M]:\n    def bind[A, B](x: M[A], f: A \u003d\u003e M[B]): M[B]\n    \n    def ap[A, B](f: M[A \u003d\u003e B], x: M[A]): M[B] \u003d\n        bind(x, (v \u003d\u003e bind(f, (g \u003d\u003e pure(g(v))))))\n\ntrait Monoid[M]:\n    def mempty: M\n    def mappend(lhs: M, rhs: M): M\n\nimplicit object OptionMonad extends Monad[Option]:\n    def pure[A](x: A): Option[A] \u003d Some(x)\n    def bind[A, B](x: Option[A], f: A \u003d\u003e Option[B]): Option[B] \u003d x match\n        case None    \u003d\u003e None\n        case Some(x) \u003d\u003e f(x)\n \nimplicit object ListFunctor extends Functor[List]:\n    def fmap[A, B](v: List[A], f: A \u003d\u003e B): List[B] \u003d v match\n        case Nil   \u003d\u003e Nil\n        case x::xs \u003d\u003e f(x)::fmap(xs, f)\n\nimplicit object ListMonoid extends Monoid[List[?]]:\n    def mempty \u003d Nil\n    def mappend(lhs: List[?], rhs: List[?]): List[?] \u003d lhs ++ rhs\n\nimplicit object intMonoid extends Monoid[Int]:\n    def mempty \u003d 0\n    def mappend(lhs: Int, rhs: Int) \u003d lhs + rhs\n\ndef liftAdd1[F[_]](x: F[Int])(implicit functorT: Functor[F]): F[Int] \u003d\n    functorT.fmap(x, _+1)\n\ndef dupMonoid[M](xs: M)(implicit monoidM: Monoid[M]): M \u003d\n    monoidM.mappend(xs, xs)\n\nliftAdd1[Option](Some(2))\nliftAdd1(1::2::Nil)\ndupMonoid(1::2::3::Nil)(ListMonoid)\ndupMonoid(6)\n\ntrait FieldA[A]:\n    def _a: A\n\ntrait FieldB[B]:\n    def _b: B\n\ncase class Haha(_a: Int) extends FieldA[Int]\ncase class Omg(_b: String) extends FieldB[String]\ncase class Bang(_a: Int, _b: String) extends FieldA[Int] with FieldB[String]\n\ndef useBoth[A, B](hi: FieldA[A], lo: FieldB[B]) \u003d\n    s\"_a : ${hi._a} ; _b :${lo._b}\"\n\nuseBoth(Haha(123), Omg(\"aaaaaa\"))\nuseBoth(Bang(666, \"omg\"), Omg(\"233\"))\n\nimplicit class FunAp[A, B](self: A \u003d\u003e B):\n    def $(p: A): B \u003d self(p)\n\ndef add(x: Int)(y: Int): Int \u003d x + y\n\nval res \u003d add $ 2 + 3 * 6 $ 6\n\nval omg \u003d \n    for\n        s \u003c- List(1,2,3)\n        res \u003d s + 1\n    yield\n        res"
      }
    ]
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 75 is not a valid line number, allowed [0..73]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionRangeLspInverse.toMeta(MtagsEnrichments.scala:165)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:149)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:253)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3(Diagnostics.scala:222)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$3$adapted(Diagnostics.scala:221)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:926)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:221)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:178)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:126)
	at scala.meta.internal.metals.MetalsLanguageServer.didChange(MetalsLanguageServer.scala:1200)
	... 15 more

5Êúà 21, 2022 11:17:38 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
Âö¥Èáç: Internal error: java.lang.reflect.InvocationTargetException
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: 79 is not a valid line number, allowed [0..76]
	at scala.meta.internal.inputs.InternalInput.lineToOffset(InternalInput.scala:37)
	at scala.meta.internal.inputs.InternalInput.lineToOffset$(InternalInput.scala:32)
	at scala.meta.inputs.Input$VirtualFile.lineToOffset(Input.scala:80)
	at scala.meta.inputs.Position$Range$.apply(Position.scala:59)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionPositionLspInverse.toMeta(MtagsEnrichments.scala:179)
	at scala.meta.internal.parsing.Trees.$anonfun$findLastEnclosingAt$4(Trees.scala:76)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.Trees.findLastEnclosingAt(Trees.scala:75)
	at scala.meta.internal.metals.codeactions.PatternMatchRefactor.contribute(PatternMatchRefactor.scala:96)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:64)
	at scala.meta.internal.metals.CodeActionProvider$$anonfun$1.applyOrElse(CodeActionProvider.scala:63)
	at scala.collection.immutable.List.collect(List.scala:275)
	at scala.meta.internal.metals.CodeActionProvider.codeActions(CodeActionProvider.scala:63)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeAction$1(MetalsLanguageServer.scala:1639)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLanguageServer.codeAction(MetalsLanguageServer.scala:1638)
	... 16 more

2022.05.21 11:17:39 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 1.3s
2022.05.21 11:18:00 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.51s
2022.05.21 11:18:50 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.47s
2022.05.21 11:19:23 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.42s
2022.05.21 11:21:48 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.37s
2022.05.21 11:22:00 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.38s
2022.05.21 11:22:45 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.35s
2022.05.21 11:22:45 INFO  shutting down Metals
2022.05.23 14:23:49 INFO  tracing is disabled for protocol LSP, to enable tracing of incoming and outgoing JSON messages create an empty file at /Users/yatchunglaw/VSCodeProjects/Playground2/.metals/lsp.trace.json or /Users/yatchunglaw/Library/Caches/org.scalameta.metals/lsp.trace.json
2022.05.24 20:22:37 INFO  tracing is disabled for protocol LSP, to enable tracing of incoming and outgoing JSON messages create an empty file at /Users/yatchunglaw/VSCodeProjects/Playground2/.metals/lsp.trace.json or /Users/yatchunglaw/Library/Caches/org.scalameta.metals/lsp.trace.json
2022.05.24 20:22:37 INFO  logging to file /Users/yatchunglaw/VSCodeProjects/Playground2/.metals/metals.log
2022.05.24 20:22:37 INFO  Started: Metals version 0.11.5 in workspace '/Users/yatchunglaw/VSCodeProjects/Playground2' for client Visual Studio Code 1.67.2.
2022.05.24 20:22:38 INFO  time: initialize in 1.28s
2022.05.24 20:22:38 WARN  Flyway upgrade recommended: H2 2.1.212 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.1.210.
2022.05.24 20:22:38 WARN  Build server is not auto-connectable.
2022.05.24 20:22:38 WARN  no build tool detected in workspace '/Users/yatchunglaw/VSCodeProjects/Playground2'. The most common cause for this problem is that the editor was opened in the wrong working directory, for example if you use sbt then the workspace directory should contain build.sbt. 
2022.05.24 20:22:42 INFO  no build target found for /Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc. Using presentation compiler with project's scala-library version: 3.1.2
2022.05.24 20:22:43 INFO  time: code lens generation in 3.65s
2022.05.24 20:22:43 INFO  no build target found for /Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc. Using presentation compiler with project's scala-library version: 3.1.2
2022.05.24 20:22:43 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 3.67s
2022.05.24 20:23:24 INFO  shutting down Metals
2022.05.27 10:02:44 INFO  tracing is disabled for protocol LSP, to enable tracing of incoming and outgoing JSON messages create an empty file at /Users/yatchunglaw/VSCodeProjects/Playground2/.metals/lsp.trace.json or /Users/yatchunglaw/Library/Caches/org.scalameta.metals/lsp.trace.json
2022.05.27 10:02:44 INFO  logging to file /Users/yatchunglaw/VSCodeProjects/Playground2/.metals/metals.log
2022.05.27 10:02:44 INFO  Started: Metals version 0.11.5 in workspace '/Users/yatchunglaw/VSCodeProjects/Playground2' for client Visual Studio Code 1.67.2.
2022.05.27 10:02:45 INFO  time: initialize in 0.98s
2022.05.27 10:02:45 WARN  Flyway upgrade recommended: H2 2.1.212 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.1.210.
2022.05.27 10:02:45 WARN  Build server is not auto-connectable.
2022.05.27 10:02:45 WARN  no build tool detected in workspace '/Users/yatchunglaw/VSCodeProjects/Playground2'. The most common cause for this problem is that the editor was opened in the wrong working directory, for example if you use sbt then the workspace directory should contain build.sbt. 
5Êúà 27, 2022 10:02:46 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
Ë≠¶Âëä: Unmatched cancel notification for request id 3
2022.05.27 10:02:48 INFO  no build target found for /Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc. Using presentation compiler with project's scala-library version: 3.1.2
5Êúà 27, 2022 10:02:49 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
Ë≠¶Âëä: Unmatched cancel notification for request id 6
5Êúà 27, 2022 10:02:49 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
Ë≠¶Âëä: Unmatched cancel notification for request id 15
5Êúà 27, 2022 10:02:49 ‰∏äÂçà org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
Ë≠¶Âëä: Unmatched cancel notification for request id 22
2022.05.27 10:02:50 INFO  time: code lens generation in 1.1s
2022.05.27 10:02:50 INFO  time: code lens generation in 1.12s
2022.05.27 10:02:50 INFO  time: code lens generation in 1.09s
2022.05.27 10:02:50 INFO  time: code lens generation in 1.07s
2022.05.27 10:02:50 INFO  no build target found for /Users/yatchunglaw/VSCodeProjects/Playground2/Others/fu.worksheet.sc. Using presentation compiler with project's scala-library version: 3.1.2
2022.05.27 10:02:50 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 3.63s
2022.05.27 10:03:14 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.56s
[31merror[39m: Others/fu.worksheet.sc:80:52: 
missing argument for parameter x of constructor SetCounter in class SetCounter: (x: Int): App.this.SetCounter
class InstrCounter(var x: Int, var y: Int) extends SetCounter:
                                                   ^^^^^^^^^^
2022.05.27 10:04:14 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.31s
[31merror[39m: Others/fu.worksheet.sc:80:24: 
error overriding variable x in class SetCounter of type Int;
  variable x of type Int needs `override` modifier
class InstrCounter(var x: Int, var y: Int) extends SetCounter(x):
                       ^
2022.05.27 10:04:24 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.37s
[31merror[39m: Others/fu.worksheet.sc:80:51: 
Not found: x
class InstrCounter(var y: Int) extends SetCounter(x):
                                                  ^
2022.05.27 10:04:35 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.24s
[31merror[39m: Others/fu.worksheet.sc:80:40: 
missing argument for parameter x of constructor SetCounter in class SetCounter: (x: Int): App.this.SetCounter
class InstrCounter(var y: Int) extends SetCounter:
                                       ^^^^^^^^^^
2022.05.27 10:04:40 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.24s
[31merror[39m: Others/fu.worksheet.sc:80:24: 
error overriding variable x in class SetCounter of type Int;
  variable x of type Int needs `override` modifier
class InstrCounter(var x: Int, var y: Int) extends SetCounter(x):
                       ^
2022.05.27 10:04:47 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.29s
[31merror[39m: Others/fu.worksheet.sc:80:33: 
error overriding variable x in class SetCounter of type Int;
  variable x of type Int cannot override a mutable variable
class InstrCounter(override var x: Int, var y: Int) extends SetCounter(x):
                                ^
2022.05.27 10:06:05 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.35s
[31merror[39m: Others/fu.worksheet.sc:80:24: 
error overriding variable x in class SetCounter of type Int;
  variable x of type Int needs `override` modifier
class InstrCounter(var x: Int, var y: Int) extends SetCounter(x):
                       ^
2022.05.27 10:06:25 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.3s
[31merror[39m: Others/fu.worksheet.sc:84:9: 
Not found: y
        y += 1
        ^
2022.05.27 10:07:31 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.24s
[31merror[39m: Others/fu.worksheet.sc:75:7: 
class SetCounter needs to be abstract, since var x: Int in class SetCounter in class App is not defined 
(Note that variables need to be initialized to be defined)
class SetCounter:
      ^
[31merror[39m: Others/fu.worksheet.sc:81:7: 
class InstrCounter needs to be abstract, since:
it has 3 unimplemented members.
/** As seen from class InstrCounter, the missing signatures are as follows.
 *  For convenience, these are usable as stub implementations.
 */
  // Members declared in repl.MdocSession$.App.InstrCounter
  var x: Int = ???
  var y: Int = ???
  
  // Members declared in repl.MdocSession$.App.SetCounter
  var x: Int = ???

class InstrCounter extends SetCounter:
      ^
2022.05.27 10:07:36 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.3s
[31merror[39m: Others/fu.worksheet.sc:75:7: 
class SetCounter needs to be abstract, since var x: Int in class SetCounter in class App is not defined 
(Note that variables need to be initialized to be defined)
class SetCounter:
      ^
[31merror[39m: Others/fu.worksheet.sc:81:7: 
class InstrCounter needs to be abstract, since:
it has 3 unimplemented members.
/** As seen from class InstrCounter, the missing signatures are as follows.
 *  For convenience, these are usable as stub implementations.
 */
  // Members declared in repl.MdocSession$.App.InstrCounter
  var x: Int = ???
  var y: Int = ???
  
  // Members declared in repl.MdocSession$.App.SetCounter
  var x: Int = ???

class InstrCounter extends SetCounter:
      ^
2022.05.27 10:07:44 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.25s
[31merror[39m: Others/fu.worksheet.sc:75:7: 
class SetCounter needs to be abstract, since var x: Int in class SetCounter in class App is not defined 
(Note that variables need to be initialized to be defined)
class SetCounter:
      ^
[31merror[39m: Others/fu.worksheet.sc:81:7: 
class InstrCounter needs to be abstract, since:
it has 3 unimplemented members.
/** As seen from class InstrCounter, the missing signatures are as follows.
 *  For convenience, these are usable as stub implementations.
 */
  // Members declared in repl.MdocSession$.App.InstrCounter
  var x: Int = ???
  var y: Int = ???
  
  // Members declared in repl.MdocSession$.App.SetCounter
  var x: Int = ???

class InstrCounter extends SetCounter:
      ^
2022.05.27 10:07:46 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.28s
[31merror[39m: Others/fu.worksheet.sc:76:18: 
Not found: _x1
    var x: Int = _x1
                 ^^^
[31merror[39m: Others/fu.worksheet.sc:81:28: 
missing argument for parameter _x of constructor SetCounter in class SetCounter: (_x: Int): App.this.SetCounter
class InstrCounter extends SetCounter:
                           ^^^^^^^^^^
2022.05.27 10:08:03 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.23s
[31merror[39m: Others/fu.worksheet.sc:81:28: 
missing argument for parameter _x of constructor SetCounter in class SetCounter: (_x: Int): App.this.SetCounter
class InstrCounter extends SetCounter:
                           ^^^^^^^^^^
2022.05.27 10:08:04 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.21s
[31merror[39m: Others/fu.worksheet.sc:81:46: 
missing argument for parameter _x of constructor SetCounter in class SetCounter: (_x: Int): App.this.SetCounter
class InstrCounter(_x: Int, _y: Int) extends SetCounter:
                                             ^^^^^^^^^^
2022.05.27 10:08:11 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.22s
[31merror[39m: Others/fu.worksheet.sc:81:7: 
class InstrCounter needs to be abstract, since:
it has 2 unimplemented members.
/** As seen from class InstrCounter, the missing signatures are as follows.
 *  For convenience, these are usable as stub implementations.
 */
  var x: Int = ???
  var y: Int = ???

class InstrCounter(_x: Int, _y: Int) extends SetCounter(_x):
      ^
2022.05.27 10:08:14 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.28s
[31merror[39m: Others/fu.worksheet.sc:82:9: 
error overriding variable x in class SetCounter of type Int;
  variable x of type Int needs `override` modifier
    var x : Int = _x
        ^
2022.05.27 10:08:21 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.24s
2022.05.27 10:08:24 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.32s
2022.05.27 10:08:28 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.34s
2022.05.27 10:08:38 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.33s
2022.05.27 10:08:49 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.35s
2022.05.27 10:08:54 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.36s
2022.05.27 10:09:15 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.34s
[31merror[39m: 
fu.worksheet.sc:146 (mdoc generated code) 
 value inc is not a member of object App.this.InstrCounter
      ic.inc


[31merror[39m: Others/fu.worksheet.sc:90:1: 
value get is not a member of object App.this.InstrCounter
ic.get
^^^^^^
[31merror[39m: Others/fu.worksheet.sc:91:1: 
value access is not a member of object App.this.InstrCounter
ic.access
^^^^^^^^^
2022.05.27 10:09:39 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.22s
2022.05.27 10:09:48 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.34s
2022.05.27 10:10:21 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.36s
2022.05.27 10:10:26 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.37s
2022.05.27 10:10:34 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.3s
2022.05.27 10:11:01 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.35s
2022.05.27 10:11:33 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.32s
2022.05.27 10:11:36 INFO  time: evaluated worksheet 'fu.worksheet.sc' in 0.31s
2022.05.27 10:12:14 INFO  shutting down Metals
